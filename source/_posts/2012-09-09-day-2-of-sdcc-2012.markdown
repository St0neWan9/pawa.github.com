---
layout: post
title: "Day 2 of SDCC 2012"
date: 2012-09-09 23:18
comments: true
categories: Misc
---

### 耗子哥

CoollShell 的作者，一个非常有观点的同学，反对敏捷 / 反对不写代码的专家 / C++ 脑残粉，我倒是很赞同他的有观点比没观点总是要好。他的题目比较大，高并发互联网应用，基本上每个 Slide 都可以来讲2小时，所以没法深入，可以当个提纲参考。

### Netflix

又是 Netflix，今天是详细介绍他们的云平台，所谓这个云平台其实就是在 AWS 的 IaaS 基础上开发了一个自己的 PaaS， 实际上底层的实现是无关应用开发的，也就是说哪天他们想自己做 IDC 了，只需要重新实现一些 AWS 特定的实现，应用完全不用修改。这个平台里有的模块都是与具体业务实现无关的抽象和总结，比如：服务注册、配置管理、日志收集、资源调度。后来有一部分因为有个线上 BUG 要处理，没听到，有 PPT 后再重温一下。

### Amazon

大型软件自动化部署，这个相当感兴趣，分析的很深入。几个印象深刻的地方：1. 统一部署概念（任何安装都是部署） 2. 部署=搬家 3. DevOps 是改进是不起作用的，要创新革命

### 丁香园

大辉同学介绍了2年来对丁香园的一些改进，有坑也有成功，对中小创业团队很有帮助，我的感觉是原来大家碰到的问题都一样。其实最想交流的是团队建设、安全防护、反垃圾方面的实践。会后和大辉换了名片，他太忙，没顾上聊，他倒是赞了雪球的产品，交流了几个产品问题，非常感谢他的支持。希望以后有机会深入交流。

### 总体感觉

这两天的会还是有不少收获，特别是有两个最近思考的问题似乎有了点思路

1. 现阶段我们是否真的需要专职的运维工程师以及如何做运维工作，似乎答案很明确了 - **不需要**。受 Amazon 同学演讲的启发，他们认为互联网产品实际上不需要 QA 也不需要 Ops，我认为确实是对的。就像 “Google 如何测试” 那个系列描述的 QA 的职责是维护自动化测试框架、工具以及指导监督开发人员进行具体测试开发一样，Ops 也应该是去维护自动化运维的流程、工具、框架以及指导开发人员进行具体的日常运维。因为只有开发人员自己才最了解业务，最了解需求，最了解哪里最可能出现问题，也最可能最快定位和解决问题。如果他们都能自助的解决问题，为啥非要和另外一个角色去沟通交流呢，完全没必要。所以就算我们需要专业的运维工程师，也肯定是需要有非常丰富开发经验的工程师来完成上边描述的事。

2. 如何更有效的开发、测试、部署，答案应该就是 - **虚拟化**。Twitter / Netflix / Alipay / Douban 都在做类似的事情，尽管他们的实现方式千差万别，不过核心的思路是，提供统一的开发框架、统一的开发测试环境、统一的部署环境，部署就是把开发测试的环境搬个家而已。感觉要实现类似的效果唯有实现自己的 PaaS 平台，屏蔽开发者对于底层服务的安装配置，高度抽象提取公共模块，统一系统框架（开发、运维方式），至于是通过虚拟机方式还是 Mesos 的资源共享方式，还有待研究，好在各种方式都有可以参考的对象。

### 加个广告

以上我描述的解决问题的方法，或早或晚都会成为我们公司产品架构的一部分，如果有任何同学感兴趣可以随时联系我 wangdong # xueqiu.com

至于我们公司的情况请猛击：[http://xueqiu.com/about/what-is-xueqiu](http://xueqiu.com/about/what-is-xueqiu)
