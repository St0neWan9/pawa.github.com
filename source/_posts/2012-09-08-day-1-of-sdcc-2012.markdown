---
layout: post
title: "Day 1 of SDCC 2012"
date: 2012-09-08 23:42
comments: true
categories:
---

周末两天参加 SDCC 2012 的会议，有些有意思的见闻和想法。

## 上午
一句话简介：垃圾时间，木啥收获

## Twitter
一位 Twitter 的华裔女工程师，当然是一口流利的普通话，话说这在历次参加过的技术会议上还是比较少见的。

讲的内容是关于 Twitter 的架构演进，从一个全功能的 App 逐步走向模块化的 Service，为了 Service 的方便开发、管理、追踪开发了一系列的基础设施和框架，而且都开源了，这些个东西以前多少都看过这次是更加深了印象。为了开发这些 Service 他们还基本上从 Ruby 迁移到了 Jvm 上（现在应该绝大多数是 Scala，印象中也有 Clojure 了，不确定）。最后还提到引入了 Mesos，来做虚拟化资源管理，提高资源的利用率（记得今年 Qcon 时候，豆瓣的 hongqn 也提到他们在做 dae 中也在使用 Mesos）。

演讲后还和她简单交流了一下，问了俩问题，也挺有启发

1. 如何保证模块化之间的正确依赖，答案是：紧密的模块都在同一个 Repo 会一起编译，并且运行相应的测试代码，如果是 RPC 调用，只要 Thrift 接口的版本是一致的，也不会有问题，单元测试是比较全面的不过针对 RPC 之间的测试并没有那么完善。

2. 如何做集成测试，答案是：利用 Iago 复制产品环境的流量，然后 Replay 去测试一个完整的测试集群。

## Netflix
因为 Netflix 全部基于 Amaonz 的 AWS 服务，所以 Build/Test 都是是以虚拟机的镜像文件为单位的，加上他们自己的云管理平台，极大的简化了测试和部署的繁琐。另外 Netflix 有两个比较特别的制度，引起在场屌丝们的议论，特别是第一个

1. 无限制休假 - 任何时间任何长度的休假都由自己决定，当然前提是不影响工作以及有问题随时中止休假。我觉得似乎做到这个不是很难吧，不管是公司方面还是雇员，特别对于工程师，其实本质上和在家或者在什么地方远程工作没啥区别，反正不是写这些代码就是写那些代码，不同的是在哪写而已。

2. 无职位差别，都是 Senior Engineer 进公司就这样，出去还这样，这个好多人没啥感觉，但我觉得这个才是个厉害的招数，非常的反常轨，一般可能只有几个人的公司才做得到。对于一家上市的成熟企业还是很难的，这样的好处是找到的愿意加入的人都是愿意 Coding 的，对于 Title 没啥追求，所以一群热爱 Coding 的人自然能做到很牛的事，真是印象深刻这一点。

## 支付宝
架构也是从 单一应用 -> 面向服务 -> 云平台 这样的演进，看来雪球还处于最初阶段呢，有的是折腾的空间 :p

同时他们的架构也异常复杂，可能由于流量特别大，业务特别复杂导致的，所以 90% 的公司永远都不会用到那么复杂的架构，又或许应该还有更简单的方法？没有经历过那种场景还是无法深刻的理解。对于一天要支持1亿笔交易的目标，还是觉得非常震撼和佩服。

## 虚拟化
Twitter / Netflix / 支付宝 都在虚拟化(或者所谓的云平台)上做了技术上的投资，我还是更愿意说虚拟化而不是什么云。这个趋势是实实在在的为了解决很多问题才流行的而不是 buzzword 驱使。

最直接解决的生产环境问题是 1. 最大化利用硬件资源 2. 自动化的错误检测/处理/升级。除了这些，我想虚拟化还可以应用在开发/测试/持续集成等所有的开发活动中来简化开发环境的配置并且更真实的模拟生生产环境。


明天还有不少有意思的 session 继续感受。
